@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<MiniGalleryViewModel>

@using System.Collections.Generic
@using DotNetNuke.Collections
@using DotNetNuke.Web.Mvc.Helpers
@using DotNetNuke.Entities.Icons
@using DotNetNuke.Web.Client.ClientResourceManagement
@using DotNetNuke.Framework
@using DotNetNuke.Framework.JavaScriptLibraries
@using DotNetNuke.Common
@using DotNetNuke.Common.Utilities
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@using R7.MiniGallery
@using R7.MiniGallery.ViewModels
@using R7.MiniGallery.Lightboxes
@using R7.Dnn.Extensions.React
@using React

@{
    JavaScript.RequestRegistration ("React");
    JavaScript.RequestRegistration ("ReactDOM");
    ServicesFramework.Instance.RequestAjaxScriptSupport ();
    ClientResourceManager.RegisterScript (Dnn.DnnPage, "~/DesktopModules/MVC/R7.MiniGallery/js/lib/MiniGallery.js");
    ClientResourceManager.RegisterScript (Dnn.DnnPage, "~/DesktopModules/MVC/R7.MiniGallery/js/lib/service.js");
    Model.Lightbox.Register (Dnn.DnnPage);
    ClientResourceManager.RegisterStyleSheet (Dnn.DnnPage, "~/DesktopModules/MVC/R7.MiniGallery/css/style-" + Model.Settings.StyleSet.ToLowerInvariant () + ".css");

    if (Model.Images.Count == 0) {
        if (!Dnn.ModuleContext.IsEditable) {
            var containerControl = Globals.FindControlRecursiveDown (Dnn.DnnPage, "ctr" + Dnn.ModuleContext.ModuleId);
            containerControl.Visible = false;
        }
        else {
            <p class="dnnFormMessage dnnFormInfo">@(Dnn.LocalizeString ("NothingToDisplay.Text"))</p>
        }
    }
}
@Dnn.ReactWithInit("MiniGallery", new {
    moduleId = Dnn.ModuleContext.ModuleId,
    isEditable = Dnn.ModuleContext.IsEditable,
    editIcon = IconController.IconURL ("Edit", "16X16", "Gray"),
    lightboxType = Model.Lightbox.GetType ().Name,
    resources = Model.ClientResources,
    settings = Model.ClientSettings,
    totalImages = Model.TotalImages,
    images = Model.Images,
    showControls = true
})

<p>@ReactEnvironment.Current.EngineVersion</p>
