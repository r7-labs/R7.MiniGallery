-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- Create tables

IF NOT EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}MiniGallery_MiniGallerys]') and OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}MiniGallery_MiniGallerys]
		(
			[MiniGalleryID] int NOT NULL IDENTITY(1, 1),
			[ModuleID] int NOT NULL,
			[Content] nvarchar(max) NOT NULL,
			[CreatedByUser] int NOT NULL,
			[CreatedOnDate] datetime NOT NULL
		)

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_MiniGallerys] 
			ADD CONSTRAINT [PK_{objectQualifier}MiniGallery_MiniGallerys] PRIMARY KEY CLUSTERED  ([MiniGalleryID])
			
		CREATE NONCLUSTERED INDEX [IX_{objectQualifier}MiniGallery_MiniGallerys_ModuleID] 
			ON {databaseOwner}[{objectQualifier}MiniGallery_MiniGallerys] ([ModuleID])

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_MiniGallerys] WITH NOCHECK 
			ADD CONSTRAINT [FK_{objectQualifier}MiniGallery_MiniGallerys_{objectQualifier}Modules] FOREIGN KEY ([ModuleID]) REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE NOT FOR REPLICATION
			
		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_MiniGallerys] 
			ADD CONSTRAINT [DF_{objectQualifier}MiniGallery_MiniGallerys_CreatedOnDate] DEFAULT (getdate()) FOR [CreatedOnDate]
	END
GO

IF NOT EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}MiniGallery_Images]') and OBJECTPROPERTY(id, N'IsTable') = 1)
BEGIN
	CREATE TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images]
	(
		[ImageID] [int] IDENTITY(1,1) NOT NULL,
		[Alt] [nvarchar](255) NOT NULL,
		[Title] [nvarchar](255) NULL,
		[URL] [nvarchar](255) NULL,
		[ThumbFileID] [int] NOT NULL,
		[ModuleID] [int] NOT NULL,
		[SortIndex] [int] NOT NULL,
		[IsPublished] [bit] NOT NULL,
		[CreatedDate] [datetime] NOT NULL,
		[CreatedByUserID] [int] NULL,
		[LastModifiedDate] [datetime] NOT NULL,
		[LastModifiedByUserID] [int] NULL,
		CONSTRAINT [PK_MiniGallery_Images] PRIMARY KEY CLUSTERED 
		(
			[ImageID] ASC
		)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
		) ON [PRIMARY]

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images]  WITH CHECK ADD  CONSTRAINT [FK_MiniGallery_Images_Files] FOREIGN KEY([ThumbFileID])
			REFERENCES {databaseOwner}[{objectQualifier}Files] ([FileId])
			ON DELETE CASCADE

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images] CHECK CONSTRAINT [FK_MiniGallery_Images_Files]

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images]  WITH CHECK ADD  CONSTRAINT [FK_MiniGallery_Images_Modules] FOREIGN KEY([ModuleID])
			REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID])
			ON DELETE CASCADE

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images] CHECK CONSTRAINT [FK_MiniGallery_Images_Modules]

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images] ADD  CONSTRAINT [DF_MiniGallery_Images_SortOrder]  DEFAULT ((1)) FOR [SortIndex]

		ALTER TABLE {databaseOwner}[{objectQualifier}MiniGallery_Images] ADD  CONSTRAINT [DF_MiniGallery_Images_IsEnabled]  DEFAULT ((1)) FOR [IsPublished]
	END
GO

-- Drop existing stored procedures

---- Just example:
-- IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}MiniGallery_GetMiniGallerys]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
--	DROP PROCEDURE {databaseOwner}{objectQualifier}MiniGallery_GetMiniGallerys
-- GO

-- Create stored procedures

---- Just example:
-- CREATE PROCEDURE {databaseOwner}{objectQualifier}MiniGallery_GetMiniGallerys
--	@ModuleId int
-- AS 
-- SELECT [MiniGalleryID]
--	[ModuleID],
--	[Content],
--	[CreatedByUser],
--	[CreatedOnDate],
--	'CreatedByUserName' = {objectQualifier}Users.FirstName + ' ' + {objectQualifier}Users.LastName
-- FROM {objectQualifier}MiniGallery_MiniGallerys
-- INNER JOIN {objectQualifier}Users on {objectQualifier}MiniGallery_MiniGallerys.CreatedByUser = {objectQualifier}Users.UserId
-- WHERE [ModuleID] = @ModuleId
-- GO

